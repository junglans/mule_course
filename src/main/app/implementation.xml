<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <db:mysql-config name="MySQL_Configuration" host="${db.host}" port="${db.port}" user="${db.user}" password="${db.pwd}" database="${db.name}" doc:name="MySQL Configuration"/>
    <flow name="GetAccountsFlow">
        <set-variable variableName="accountType" value="#[message.inboundProperties.'http.query.params'.type]" doc:name="var:accountType"/>
        <db:select config-ref="MySQL_Configuration" doc:name="DB.GetAccounts.By.Type">
            <db:parameterized-query><![CDATA[SELECT * 
FROM flights_customers
WHERE accountType = #[flowVars.accountType]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="sample_data\list_map.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	id: payload01.accountID as :number,
	address: payload01.street ++ ',' ++ payload01.city ++ ',' ++ payload01.state ,
	country: payload01.country,
	creationDate: payload01.creationDate as :string,
	firstName: (payload01.name splitBy " ")[0],
	lastName: (payload01.name splitBy " ")[1],
	miles: payload01.miles,
	postal: payload01.postal,
	type: payload01.accountType
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="GetAccountByIDFlow">
        <set-variable variableName="id" value="#[message.inboundProperties.'http.uri.params'.ID]" doc:name="var:id"/>
        <db:select config-ref="MySQL_Configuration" doc:name="DB.GetAccount.By:ID">
            <db:parameterized-query><![CDATA[SELECT * 
FROM flights_customers
WHERE accountID = #[flowVars.id]]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[message.payload.size() != 0]">
                <dw:transform-message doc:name="Transform Message">
                    <dw:input-payload doc:sample="sample_data\list_map_1.dwl"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
(payload map ((payload01 , indexOfPayload01) -> {
	id: payload01.accountID as :number,
	address: payload01.street ++ ',' ++ payload01.city ++ ',' ++ payload01.state ,
	country: payload01.country,
	creationDate: payload01.creationDate as :string,
	firstName: (payload01.name splitBy " ")[0],
	lastName: (payload01.name splitBy " ")[1],
	miles: payload01.miles,
	postal: payload01.postal,
	type: payload01.accountType
}))[0]]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="404" doc:name="Property"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="CreateAccountFlow">
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <set-payload value="{
&quot;message&quot; : &quot;Customer's Account created (But not really)&quot;
}" doc:name="Set Payload"/>
    </flow>
    <flow name="UpdateAccountFlow">
        <set-payload value="{
&quot;message&quot; : &quot;Account updated (But not really..)&quot;
}" doc:name="Set Payload"/>
    </flow>
    <flow name="DeleteAccountFlow">
        <set-payload value="{&quot;message&quot;: &quot;Customer account deleted (But not really..)&quot;}" doc:name="Set Payload"/>
    </flow>
</mule>
